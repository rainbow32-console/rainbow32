const array=globalThis.Array;array.isarray=globalThis.Array.isArray;const promise=globalThis.Promise;const globalthis=globalThis,uint8array=Uint8Array;function importExposed(e){return globalThis.__rainbow32_api[e]}const flr=Math.floor;const math=Math,object=Object,keys=object.keys,pairs=object.entries,entries=object.entries,values=object.values;const playsound=importExposed("playSound"),playaudio=importExposed("playAudio"),getvolume=importExposed("getVolume"),storetofile=importExposed("storetofile"),readfromfile=importExposed("readfromfile"),addparticle=importExposed("addparticle"),removeparticle=importExposed("removeparticle"),removeparticles=importExposed("removeparticles"),renderparticles=importExposed("renderparticles"),__menu={resetentries:importExposed("resetentries"),setentry:importExposed("setentry"),removentry:importExposed("removentry")},parseimage=importExposed("parseImage"),parsemask=importExposed("parseMask"),defaultpalette=importExposed("defaultPalette"),imageutils={cls:importExposed("cls"),parseimage:importExposed("parseImage"),applyimagemask:importExposed("applyImageMask"),applyimagemaskmodifyimage:importExposed("applyImageMaskModifyImage"),circle:importExposed("circle"),square:importExposed("square"),defaultpalette:importExposed("defaultPalette"),getcolor:importExposed("getColor"),getcurrentpalette:importExposed("getCurrentPalette"),isvalidcolor:importExposed("isValidColor"),parsemask:importExposed("parseMask"),putimage:importExposed("putImage"),putimageraw:importExposed("putImageRaw"),setcurrentpalette:importExposed("setCurrentPalette"),stringifyimage:importExposed("stringifyImage"),stringifymask:importExposed("stringifyMask"),serializeimage:importExposed("serializeImage"),unserializeimage:importExposed("unserializeImage"),imgtopng:importExposed("imgToPng"),setoffset:importExposed("setOffset"),setpixel:importExposed("setPixel"),line:importExposed("line")},dist=importExposed("distance"),lerp=importExposed("lerp"),mem=importExposed("memory"),buttons=importExposed("buttons"),stopgame=importExposed("stopgame"),screen={height:importExposed("height"),width:importExposed("width")},scene=importExposed("scene"),scenemanager=importExposed("scenemanager"),gameobject=importExposed("gameobject"),createcomponent=importExposed("createcomponent"),component=importExposed("createcomponent"),comp=importExposed("createcomponent"),imagerenderer=importExposed("imagerenderer"),boxcollider=importExposed("boxcollider"),download=importExposed("download"),isontimeout=importExposed("isontimeout"),timeout=importExposed("timeout"),nextframe=importExposed("nextframe"),fonts=importExposed("fonts"),currenttextmasks=importExposed("currenttextmasks"),textutils={addcharmap:importExposed("addcharmap"),applycharmap:importExposed("applycharmap"),clearcharmap:importExposed("clearcharmap"),calculatebounds:importExposed("calculatebounds"),calculatewidth:importExposed("calculatewidth"),writetext:importExposed("writetext")};const square=imageutils.square;function scaleimg(e,n){if(e=flr(e),e<1)return{buf:new uint8array(0),height:0,width:0};if(e===1)return n;const r={height:n.height*e,width:n.width*e,buf:new uint8array(n.buf.length*e**2)},t=r.buf;for(let m=0;m<n.height;++m)for(let c=0;c<n.width;++c)for(let s=0;s<e;++s)for(let g=0;g<e;++g)t[(m*e+g)*r.width+(c*e+s)]=n.buf[m*n.width+c];return r}function spr(e,n,r,t,m){t||=1,!(t<1)&&(t=flr(t),imageutils[m?"putimageraw":"putimage"](e,n,scaleimg(t,r)))}const error=Error;function font(e){if(typeof e!="object"&&e&&!fonts[e])throw new error("no font with the name "+e);textutils.clearcharmap(),textutils.applycharmap(e?typeof e!="object"?fonts[e]:e:fonts.default)}const pal=importExposed("setpalettetranslation");function palt(e,n){pal(e,n?255:e)}const cls=imageutils.cls,setp=imageutils.setpixel;function registergame(e){globalThis.__registeredGame={...e,update(n){cursor(),e.update?.(n)}}}function btnp(e){return buttons[e].press}const L="left",R="right";function substr(e,n,r){return e.substring(n,r)}let cursor_pos={x:0,y:0};function cursor(e,n){e!==void 0&&(cursor_pos.x=e),n!==void 0&&(cursor_pos.y=n),e===void 0&&n===void 0&&(cursor_pos.x=0,cursor_pos.y=0)}const infinity=1/0;function print(e,n,r,t,m,c,s){(t!==void 0||m!==void 0)&&cursor(t,m);const g=e.split(`
`);for(let l=0;l<g.length;++l){const f=textutils.writetext(g[l],cursor_pos.x,cursor_pos.y,infinity,{color:n,background:r,spaceWidth:c,centered:s});g.length===1?cursor(f[0].end+1,f[0].y):cursor(t!==void 0?t:0,cursor_pos.y+6)}}function findindex(e,n){for(let r=0;r<e.length;++r)if(n(e[r],r))return r}function map(e,n){const r=[];for(let t=0;t<e.length;++t)r.push(n(e[t],t,e));return r}const log=console.log;const now=Date.now;const u="u",i="i",o="o",p="p";const line=imageutils.line,getcolorhex=imageutils.getcolor,createeffect=importExposed("createeffect"),applyeffect=importExposed("applyeffect"),removeeffect=importExposed("removeeffect"),createrenderer=importExposed("createrenderer"),applyrenderer=importExposed("applyrenderer"),removerenderer=importExposed("removerenderer"),effects=importExposed("effects"),renderers=importExposed("renderers"),getanimationframe=importExposed("getanimationframe"),animationplayer=importExposed("animationplayer"),animationbuilder=importExposed("animationbuilder");const getcurrentimage=importExposed("getcurrentimage"),getcurrentimagemask=importExposed("getcurrentimagemask"),run=importExposed("run");(function(){const e={warn:{buf:new Uint8Array([0,0,11,0,0,0,11,0,11,0,0,11,0,11,0,11,11,11,11,11,11,11,0,11,11,0,11,11,11,0]),height:6,width:5}},n={loading_char:{buf:new Uint8Array([232,57,47,0]),height:5,width:5},lc1:{buf:new Uint8Array([3,0,0,0]),height:5,width:5},lc2:{buf:new Uint8Array([6,0,0,0]),height:5,width:5},lc3:{buf:new Uint8Array([12,0,0,0]),height:5,width:5},lc4:{buf:new Uint8Array([24,0,0,0]),height:5,width:5},lc5:{buf:new Uint8Array([16,2,0,0]),height:5,width:5},lc6:{buf:new Uint8Array([0,66,0,0]),height:5,width:5},lc7:{buf:new Uint8Array([0,64,8,0]),height:5,width:5},lc8:{buf:new Uint8Array([0,0,8,1]),height:5,width:5},lc9:{buf:new Uint8Array([0,0,128,1]),height:5,width:5},lc10:{buf:new Uint8Array([0,0,192,0]),height:5,width:5},lc11:{buf:new Uint8Array([0,0,96,0]),height:5,width:5},lc12:{buf:new Uint8Array([0,0,48,0]),height:5,width:5},lc13:{buf:new Uint8Array([0,128,16,0]),height:5,width:5},lc14:{buf:new Uint8Array([0,132,0,0]),height:5,width:5},lc15:{buf:new Uint8Array([32,4,0,0]),height:5,width:5},lc16:{buf:new Uint8Array([33,0,0,0]),height:5,width:5}},r={},t=globalThis,m={_name:"cartridge browser",_author:"fishi"},c={loading:[{value:"K loading...",time:100},{value:"S loading...",time:100},{value:"/ loading...",time:100}],loading1:[{value:"1 loading...",time:50},{value:"2 loading...",time:50},{value:"3 loading...",time:50},{value:"4 loading...",time:50},{value:"5 loading...",time:50},{value:"6 loading...",time:50},{value:"7 loading...",time:50},{value:"8 loading...",time:50},{value:"9 loading...",time:50},{value:"0 loading...",time:50},{value:"\xE4 loading...",time:50},{value:"\xF6 loading...",time:50},{value:"\xFC loading...",time:50},{value:"\xDF loading...",time:50},{value:"? loading...",time:50},{value:"! loading...",time:50}]};t.getimage=s=>e[s],t.getmask=s=>n[s],t.getaudio=s=>r[s],t.getstring=s=>m[s],t.getanimation=s=>c[s]})();const electronapi=globalthis.electron?.ipcRenderer?{getcartridges:globalthis.electron.ipcRenderer.getCartridges,getdevices:globalthis.electron.ipcRenderer.getDevices,getfilecontents:globalthis.electron.ipcRenderer.getFileContents,listdirectory:globalthis.electron.ipcRenderer.listDirectory,loadprogram:globalthis.electron.ipcRenderer.loadProgram,mountdevice:globalthis.electron.ipcRenderer.mountDevice,togglefullscreen:globalthis.electron.ipcRenderer.toggleFullscreen,unmountdevice:globalthis.electron.ipcRenderer.unmountDevice}:{async getcartridges(){return[]},async getdevices(){return[]},async getfilecontents(){return[]},async listdirectory(){return[]},async loadprogram(){return[]},async mountdevice(){return[]},async togglefullscreen(){return[]},async unmountdevice(){return[]}};if(!electronapi)throw new error("can only run in electron");async function urltoimage(e,n,r,t,m){t||=0,m||=0,t*=-1,m*=-1;const c=new uint8array(n*r),s=globalthis.document,g=s.createElement.bind(s),l=g("img");l.src=e,l.style.opacity="0",s.body.append(l),await new promise((d,b)=>{if(l.complete)return d();l.addEventListener("load",()=>d()),l.addEventListener("error",b),l.addEventListener("error",log.bind(globalthis,"failed to load image:"))}).then(l.remove.bind(l),l.remove.bind(l));const f=g("canvas");f.width=n,f.height=r;const h=f.getContext("2d");if(!h)return;h.drawImage(l,t,m);const y=h.getImageData(0,0,f.width,f.height).data,w=new globalthis.Array(32).fill(0).map((d,b)=>getcolorhex(b));for(let d=0;d<y.length>>2;++d){if(y[(d<<2)+3]<127)continue;const b=findindex(w,v=>v.r===y[d<<2]&&v.g===y[(d<<2)+1]&&v.b===y[(d<<2)+2]);b<0||(c[d]=b)}return{width:n,height:r,buf:c}}let selected=0,cartridges,carturls=[];electronapi.getcartridges().then(e=>{carturls=e,promise.all(map(e,async n=>[await urltoimage(n,screen.width,screen.height,22,23),await urltoimage(n,screen.width,screen.height,22,230).then(scaledown2x)])).then(n=>cartridges=n).then(()=>font(fonts.default))});let isfetching=!1,a=math.random()<.5;log(getanimation("loading"));const loading_p=new animationplayer(getanimation(a?"loading1":"loading"));function scaledown2x(e){const n=new uint8array(flr(e.buf.length/2)),r=e.buf,t=flr(e.width/2),m=flr(e.height/2);for(let c=0;c<m;++c)for(let s=0;s<t;++s)n[c*t+s]=r[c*2*e.width+s*2];return{width:t,buf:n,height:m}}registergame({name:"cartridge browser",init:loading_p.start.bind(loading_p),update(){cls(),cartridges?cartridges.length<1?(cursor(6),spr(0,0,getimage("warn")),print("no cartridges found!")):(btnp(R)?selected++:btnp(L)&&selected--,selected>=cartridges.length?selected=0:selected<0&&(selected=cartridges.length-1),(btnp(u)||btnp(i)||btnp(o)||btnp(p))&&carturls[selected]&&!isfetching&&(isfetching=!0,globalthis.fetch("data:application/octet-stream;base64,"+substr(carturls[selected],22)).then(e=>e.arrayBuffer()).then(e=>new uint8array(e)).then(e=>{const n=e[e.length-1]|e[e.length-2]<<8|e[e.length-3]<<16|e[e.length-4]<<24;let r="";for(let t=n;t<e.length-4;++t)r+=globalthis.String.fromCharCode(e[t]);isfetching=!1,run(r).catch(()=>{})})),spr(0,0,cartridges[selected][0]),palt(0,!0),spr(0,167,cartridges[selected][1]),palt(0,!1)):(textutils.addcharmap("/",getmask("loading_char")),textutils.addcharmap("1",getmask("lc1")),textutils.addcharmap("2",getmask("lc2")),textutils.addcharmap("3",getmask("lc3")),textutils.addcharmap("4",getmask("lc4")),textutils.addcharmap("5",getmask("lc5")),textutils.addcharmap("6",getmask("lc6")),textutils.addcharmap("7",getmask("lc7")),textutils.addcharmap("8",getmask("lc8")),textutils.addcharmap("9",getmask("lc9")),textutils.addcharmap("0",getmask("lc10")),textutils.addcharmap("\xE4",getmask("lc11")),textutils.addcharmap("\xF6",getmask("lc12")),textutils.addcharmap("\xFC",getmask("lc13")),textutils.addcharmap("\xDF",getmask("lc14")),textutils.addcharmap("?",getmask("lc15")),textutils.addcharmap("!",getmask("lc16")),print(loading_p.getframe()))},remove:loading_p.stop.bind(loading_p)});
